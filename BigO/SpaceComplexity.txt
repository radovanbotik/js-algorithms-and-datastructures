                            Space Complexity

#   auxiliaty space complexity refers to space required by the algorithm
    not including space taken up by inputs

1.  Most primitives(booleans,numbers,undefined,null) are constant space
2.  Strings require O(n) space (where n is the string length)
3.  Reference types are generally O(n) where n is the length
    (for arrays) or number of keys(for objects)

Ex:

function sum(arr){
    let total = 0;
    for (let i = 0; i < arr.length; i++) {
        total += arr[i]
    }
    return total
}
    #total is one number
    #i is one number aswell
    
    we only have 2 variables that always exists no matter the size of the input
    so our space is constant.

Ex2:

function double (arr) {
    let newArr = [];
    for (let i = 0; i < arr.length; i++){
        newArr.push( 2 * arr[i] )
    }
    return newArr
}    

    #we making new array
    #new array grows proportionally with n

    so our space is O(n)