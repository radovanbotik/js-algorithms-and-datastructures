                            Recursion:

#How recursive functions work:

1.  We invoke the SAME function with a different input until you reach your base case.
2.  Base Case is the condition when the recursion ends.

##Therefore each recursive function needs:
    1.Base Case, otherwise we will be stuck in infinite loop
    2.Different Input(Recursive call), you want to call the same function
      with different input to get result.

// Recursive Version
function countDown(num){
    if(num <= 0) {
        console.log("All done!");
        return;
    }
    console.log(num);
    num--;
    countDown(num);
}
countDown(3)

1.Function countdown takes a number
2.If number is equal or less than zero we want to stop executing using 
  If condition and RETURNING.
3.We decrease the number by 1 num--
4.We invoke function inside self again and again everytime with new value for number
  until we hit 0.

function sumRange(num) {
  if (num === 1) return 1;
  return num + sumRange(num - 1);
}
console.log(sumRange(4));

1.  Base Case : if (num === 1) return 1;
2.  Recursive call : return num + sumRange(num - 1);
3. 4 + sumRange(4-1), sumRange returns 3, then sumRange returns 2, then sumRange returns 1

sumRange(4)
  return (4) + sumRange(3)
  we return num which is 4 + sumRange(4-3) but the function doesnt know what the return is
  it only knows to call itself unless the return is 1, so we call it again
    return(3) + sumRange(2)
      and again
        return(2) + sumRange(1)
          now the return is 1 and we can start popping off the functions
          
          1+2 = 3 so the return of sumRange(2) is 3
          3+3 = 6 so the return of sumRange(3) is 6
          4+6 = 10 the return of sumRange(4) is 10